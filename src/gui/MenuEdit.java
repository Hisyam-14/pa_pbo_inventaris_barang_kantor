/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.List;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import models.CrudEdit;
import com.toedter.calendar.JDateChooser;
import java.util.Date;
import models.CrudPemasok;

/**
 *
 * @author TUF
 */
public class MenuEdit extends javax.swing.JFrame {
    private int userId;
    private String selectedBrgId = null;
    private JDateChooser dateChooser;

    /**
     * Creates new form MenuUser
     */
    public MenuEdit(int userId) {
        initComponents();
        this.userId = userId;
        dateChooser = new JDateChooser();
        dateChooser.setDateFormatString("yyyy-MM-dd");
        dateChooser.setBounds(150, 150, 150, 30);
        pMenuEdit.remove(fTanggal);
        dateChooser.setBounds(fTanggal.getBounds());
        pMenuEdit.add(dateChooser);
        CrudEdit.comboPemasok(cIdPemasok);
        loadPemassok();
        loadBrg();
        taBarang.addMouseListener(new MouseAdapter(){
            @Override
            public void mouseClicked(MouseEvent evt){
                if(evt.getClickCount() == 2 && taBarang.getSelectedRow() != -1){
                    int selectedRow = taBarang.getSelectedRow();
                    tIdBarang.setText(taBarang.getValueAt(selectedRow, 0).toString());
                    tNamaBarang.setText(taBarang.getValueAt(selectedRow, 1).toString());
                    try{
                        String dateStr = taBarang.getValueAt(selectedRow, 2).toString();
                        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
                        Date date = sdf.parse(dateStr);
                        dateChooser.setDate(date);
                    }catch (ParseException e){
                        e.printStackTrace();
                    }
                    cKategori.setSelectedItem(taBarang.getValueAt(selectedRow, 3).toString());
                    tJumlah.setText(taBarang.getValueAt(selectedRow, 4).toString());
                    String idPemasok = taBarang.getValueAt(selectedRow, 5).toString();
                    cIdPemasok.setSelectedItem(idPemasok + " - " + getNamaPemasok(idPemasok));
                    
                    selectedBrgId = taBarang.getValueAt(selectedRow, 0).toString(); 
                    
                    bInsert.setEnabled(false);
                    tIdBarang.setEnabled(false);
                }
            }
        });
    }

    private MenuEdit() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pMenuEdit = new javax.swing.JPanel();
        pNavbar = new javax.swing.JPanel();
        bPemasok = new javax.swing.JButton();
        bHome = new javax.swing.JButton();
        inventarisBarang = new javax.swing.JLabel();
        bBarang = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        taBarang = new javax.swing.JTable();
        idBarang = new javax.swing.JLabel();
        tIdBarang = new javax.swing.JTextField();
        namaBarang = new javax.swing.JLabel();
        tanggal = new javax.swing.JLabel();
        tNamaBarang = new javax.swing.JTextField();
        tJumlah = new javax.swing.JTextField();
        bInsert = new javax.swing.JButton();
        bUpdate = new javax.swing.JButton();
        bDelete = new javax.swing.JButton();
        jumlah = new javax.swing.JLabel();
        fTanggal = new javax.swing.JFormattedTextField();
        kategori = new javax.swing.JLabel();
        cKategori = new javax.swing.JComboBox<>();
        idPemasok = new javax.swing.JLabel();
        cIdPemasok = new javax.swing.JComboBox<>();
        bClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pMenuEdit.setBackground(new java.awt.Color(0, 153, 153));

        pNavbar.setBackground(new java.awt.Color(102, 193, 196));
        pNavbar.setPreferredSize(new java.awt.Dimension(750, 60));

        bPemasok.setText("Pemasok");
        bPemasok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPemasokActionPerformed(evt);
            }
        });

        bHome.setText("Home");
        bHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bHomeActionPerformed(evt);
            }
        });

        inventarisBarang.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        inventarisBarang.setText("INVENTARIS BARANG");

        bBarang.setText("Barang");
        bBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBarangActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pNavbarLayout = new javax.swing.GroupLayout(pNavbar);
        pNavbar.setLayout(pNavbarLayout);
        pNavbarLayout.setHorizontalGroup(
            pNavbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pNavbarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inventarisBarang)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bBarang)
                .addGap(18, 18, 18)
                .addComponent(bPemasok)
                .addGap(18, 18, 18)
                .addComponent(bHome)
                .addGap(19, 19, 19))
        );
        pNavbarLayout.setVerticalGroup(
            pNavbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pNavbarLayout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(pNavbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bPemasok)
                    .addComponent(bHome)
                    .addComponent(inventarisBarang)
                    .addComponent(bBarang))
                .addContainerGap())
        );

        taBarang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "ID Barang", "Nama Barang", "Tanggal Masuk", "Kategori", "Jumlah", "ID Pemasok"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(taBarang);

        idBarang.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        idBarang.setText("ID Barang :");

        namaBarang.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        namaBarang.setText("Nama Barang :");

        tanggal.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tanggal.setText("Tanggal :");

        bInsert.setText("Insert");
        bInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bInsertActionPerformed(evt);
            }
        });

        bUpdate.setText("Update");
        bUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUpdateActionPerformed(evt);
            }
        });

        bDelete.setText("Delete");
        bDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeleteActionPerformed(evt);
            }
        });

        jumlah.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jumlah.setText("Jumlah :");

        fTanggal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("yyyy-MM-dd"))));

        kategori.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        kategori.setText("Kategori :");

        cKategori.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Elektronik", "Furnitur", "ATK", "Kebersihan", "Keamanan", "Perangkat Jaringan" }));
        cKategori.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cKategoriActionPerformed(evt);
            }
        });

        idPemasok.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        idPemasok.setText("ID Pemasok :");

        cIdPemasok.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cIdPemasok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cIdPemasokActionPerformed(evt);
            }
        });

        bClear.setText("Clear");
        bClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pMenuEditLayout = new javax.swing.GroupLayout(pMenuEdit);
        pMenuEdit.setLayout(pMenuEditLayout);
        pMenuEditLayout.setHorizontalGroup(
            pMenuEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pNavbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pMenuEditLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(pMenuEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pMenuEditLayout.createSequentialGroup()
                        .addGroup(pMenuEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(tNamaBarang, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(tIdBarang, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                            .addComponent(fTanggal)
                            .addComponent(cKategori, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(namaBarang)
                            .addComponent(idBarang)
                            .addComponent(tanggal)
                            .addComponent(kategori)
                            .addGroup(pMenuEditLayout.createSequentialGroup()
                                .addGroup(pMenuEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jumlah)
                                    .addComponent(tJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(pMenuEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(cIdPemasok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(idPemasok))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE))
                    .addGroup(pMenuEditLayout.createSequentialGroup()
                        .addComponent(bInsert)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bClear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(bDelete)
                        .addGap(18, 18, 18)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pMenuEditLayout.setVerticalGroup(
            pMenuEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pMenuEditLayout.createSequentialGroup()
                .addComponent(pNavbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pMenuEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pMenuEditLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(idBarang)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tIdBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(namaBarang)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tNamaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tanggal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(fTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(kategori)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cKategori, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(pMenuEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jumlah)
                            .addComponent(idPemasok))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pMenuEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(tJumlah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cIdPemasok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(41, 41, 41)
                        .addGroup(pMenuEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bInsert)
                            .addComponent(bUpdate)
                            .addComponent(bDelete)
                            .addComponent(bClear))
                        .addGap(22, 22, 22))
                    .addGroup(pMenuEditLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(14, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pMenuEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pMenuEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private String getNamaPemasok(String id){
        int idInt = Integer.parseInt(id);
        for(CrudPemasok pmsk : CrudPemasok.getAllPemasok()){
            if(pmsk.getIdPemasok() == idInt){
                return pmsk.getNama();
            }
        }
        return "";
    }
    
    private void loadPemassok(){
        List<CrudPemasok> pemasok = CrudPemasok.getAllPemasok();
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();
        for(CrudPemasok pmsk : pemasok){
            model.addElement(pmsk.getIdPemasok() + " - " + pmsk.getNama());
        }
        cIdPemasok.setModel(model);
    }
    
    private void loadBrg(){
        List<CrudEdit> brgList = CrudEdit.getAllBrg();
        DefaultTableModel model = (DefaultTableModel) taBarang.getModel();
        model.setRowCount(0);
        
        for (CrudEdit brg : brgList){
            Object[] row = {
                brg.getIdBrg(),
                brg.getNama(),
                brg.getTgl(),
                brg.getKategori(),
                brg.getJml(),
                brg.getIdPmsk()
            };
            model.addRow(row);
        }
    }
    
    private void bersihkan(){
        tIdBarang.setText("");
        tNamaBarang.setText("");
        dateChooser.setDate(null);
        cKategori.setSelectedItem("");
        tJumlah.setText("");
        cIdPemasok.setSelectedItem("");
        bInsert.setEnabled(true);
        tIdBarang.setEnabled(true);
    }
    
    private void bPemasokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPemasokActionPerformed
        // TODO add your handling code here:
        MenuPemasok pmsk = new MenuPemasok(this.userId);
        pmsk.setVisible(true);
        pmsk.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_bPemasokActionPerformed

    private void bInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bInsertActionPerformed
        // TODO add your handling code here:
        String idBrg = tIdBarang.getText();
        String nama = tNamaBarang.getText();
        Date selectedDate = dateChooser.getDate();
        if (idBrg.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Field ID Barang tidak boleh kosong");
            return;
        }
        if (nama.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Field Nama Barang tidak boleh kosong");
            return;
        }
        if(selectedDate == null){
            JOptionPane.showMessageDialog(null, "Silahkan Pilih Tanggal");
            return;
        }
        SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
        String tgl = dateFormat.format(selectedDate);
        String kategori = (String) cKategori.getSelectedItem();
        int jml;
        try {
            jml = Integer.parseInt(tJumlah.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Field Jumlah harus berupa angka");
            return;
        }
        String selectedItem = (String) cIdPemasok.getSelectedItem();
        int idPmsk = Integer.parseInt(selectedItem.split(" - ")[0]);
        
        try {
            CrudEdit newBarang = new CrudEdit(idBrg, nama, tgl, kategori, jml, idPmsk);
            newBarang.brgInsert();
            loadBrg();
            bersihkan();

        } catch (Exception e) {
            // Handle invalid date format
            JOptionPane.showMessageDialog(null, "Error: " + e.getMessage());
        }
    }//GEN-LAST:event_bInsertActionPerformed

    private void bBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBarangActionPerformed
        // TODO add your handling code here:
        MenuEdit edit = new MenuEdit(this.userId);
        edit.setVisible(true);
        edit.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_bBarangActionPerformed

    private void bHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bHomeActionPerformed
        // TODO add your handling code here:
        MenuUtama utm = new MenuUtama(this.userId);
        utm.setVisible(true);
        utm.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_bHomeActionPerformed

    private void cKategoriActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cKategoriActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cKategoriActionPerformed

    private void cIdPemasokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cIdPemasokActionPerformed
        // TODO add your handling code here:
        String selectedItem = (String) cIdPemasok.getSelectedItem();
        if(selectedItem != null){
            String[] parts = selectedItem.split(" - ");
            String idPmsk = parts[0];
            System.out.println("ID Pemasok: " + idPmsk);
        }
    }//GEN-LAST:event_cIdPemasokActionPerformed

    private void bClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bClearActionPerformed
        // TODO add your handling code here:
        bersihkan();
    }//GEN-LAST:event_bClearActionPerformed

    private void bUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUpdateActionPerformed
        // TODO add your handling code here:
        if(selectedBrgId == null){
            JOptionPane.showMessageDialog(null, "Double klik pada tabel untuk memilih barang yang mau diupdate");
            return;
        }
        try{
            String updateIdBrg = tIdBarang.getText();
            String updateNama = tNamaBarang.getText();
            Date selectedDate = dateChooser.getDate();
            if (updateIdBrg.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Field ID Barang tidak boleh kosong");
                return;
            }
            if (updateNama.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Field Nama Barang tidak boleh kosong");
                return;
            }
            if(selectedDate == null){
                JOptionPane.showMessageDialog(null, "Silahkan Pilih Tanggal");
                return;
            }
            SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
            String updateTgl = dateFormat.format(selectedDate);
            
            String updateKategori = (String) cKategori.getSelectedItem();
            int updateJml; 
            try{
                updateJml = Integer.parseInt(tJumlah.getText());
            }catch(NumberFormatException e){
                JOptionPane.showMessageDialog(null, "Field Jumlah harus berupa angka");
                return;
            }
            

            String selectedItem = (String) cIdPemasok.getSelectedItem();
            int updateIdPmsk = Integer.parseInt(selectedItem.split(" - ")[0]);
            
            CrudEdit update = new CrudEdit(updateIdBrg, updateNama, updateTgl, updateKategori, updateJml, updateIdPmsk);
            update.setIdBrg(selectedBrgId);
            update.brgUpdate();
            
            JOptionPane.showMessageDialog(null, "Berhasil Update Data");
            loadBrg();
            bersihkan();
            selectedBrgId = null;
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "Error updating barang: " + e.getMessage());
        }
    }//GEN-LAST:event_bUpdateActionPerformed

    private void bDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDeleteActionPerformed
        // TODO add your handling code here:
        if (selectedBrgId == null){
            JOptionPane.showMessageDialog(null, "Double klik pada tabel untuk memilih barang yang mau dihapus");
            return;
        }

        int verifikasi = JOptionPane.showConfirmDialog(null, "Apakah anda yakin mau menghapus Pemasok ini?", "Verifikasi", JOptionPane.YES_NO_OPTION);
        if(verifikasi == JOptionPane.YES_OPTION){
            try{
                CrudEdit delete = new CrudEdit(selectedBrgId, selectedBrgId, selectedBrgId, selectedBrgId, NORMAL, WIDTH);
                delete.setIdBrg(selectedBrgId);
                delete.brgDelete();
                
                loadBrg();
                bersihkan();
                selectedBrgId = null;
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Error Delete barang: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_bDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuEdit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuEdit().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bBarang;
    private javax.swing.JButton bClear;
    private javax.swing.JButton bDelete;
    private javax.swing.JButton bHome;
    private javax.swing.JButton bInsert;
    private javax.swing.JButton bPemasok;
    private javax.swing.JButton bUpdate;
    private javax.swing.JComboBox<String> cIdPemasok;
    private javax.swing.JComboBox<String> cKategori;
    private javax.swing.JFormattedTextField fTanggal;
    private javax.swing.JLabel idBarang;
    private javax.swing.JLabel idPemasok;
    private javax.swing.JLabel inventarisBarang;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jumlah;
    private javax.swing.JLabel kategori;
    private javax.swing.JLabel namaBarang;
    private javax.swing.JPanel pMenuEdit;
    private javax.swing.JPanel pNavbar;
    private javax.swing.JTextField tIdBarang;
    private javax.swing.JTextField tJumlah;
    private javax.swing.JTextField tNamaBarang;
    private javax.swing.JTable taBarang;
    private javax.swing.JLabel tanggal;
    // End of variables declaration//GEN-END:variables
}
