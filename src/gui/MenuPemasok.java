/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import javax.swing.JOptionPane;
import models.CrudPemasok;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
/**
 *
 * @author TUF
 */
public class MenuPemasok extends javax.swing.JFrame {
    private int userId; // ID pengguna yang sedang aktif
    private int selectedPemasokId = -1; // ID pemasok yang dipilih untuk diedit

    /**
     * Konstruktor untuk kelas MenuPemasok.
     * @param userId ID pengguna yang sedang aktif
     */
    public MenuPemasok(int userId) {
        initComponents(); // Menginisialisasi komponen GUI
        this.userId = userId; // Menyimpan ID pengguna
        loadPemasokData(); // Memuat data pemasok ke dalam tabel
        taPemasok.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent evt) {
                // Menangani klik ganda pada tabel pemasok
                if (evt.getClickCount() == 2 && taPemasok.getSelectedRow() != -1) {
                    int selectedRow = taPemasok.getSelectedRow(); // Mendapatkan baris yang dipilih
                    tNamaPemasok.setText(taPemasok.getValueAt(selectedRow, 1).toString()); // Mengisi nama pemasok
                    tAlamat.setText(taPemasok.getValueAt(selectedRow, 2).toString()); // Mengisi alamat pemasok
                    tKontak.setText(taPemasok.getValueAt(selectedRow, 3).toString()); // Mengisi kontak pemasok
                    
                    selectedPemasokId = (int) taPemasok.getValueAt(selectedRow, 0); // Menyimpan ID pemasok yang dipilih
                    
                    bInsert.setEnabled(false); // Menonaktifkan tombol Insert
                }
            }
        });
    }

    private MenuPemasok() {
        throw new UnsupportedOperationException("Not supported yet."); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/GeneratedMethodBody
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pMenuEdit = new javax.swing.JPanel();
        pNavbar = new javax.swing.JPanel();
        bPemasok = new javax.swing.JButton();
        bHome = new javax.swing.JButton();
        inventarisBarang = new javax.swing.JLabel();
        bBarang = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        taPemasok = new javax.swing.JTable();
        namaPemasok = new javax.swing.JLabel();
        alamat = new javax.swing.JLabel();
        tNamaPemasok = new javax.swing.JTextField();
        tKontak = new javax.swing.JTextField();
        bInsert = new javax.swing.JButton();
        bUpdate = new javax.swing.JButton();
        bDelete = new javax.swing.JButton();
        jumlah2 = new javax.swing.JLabel();
        tAlamat = new javax.swing.JTextField();
        bClear = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        pMenuEdit.setBackground(new java.awt.Color(0, 153, 153));

        pNavbar.setBackground(new java.awt.Color(102, 193, 196));
        pNavbar.setPreferredSize(new java.awt.Dimension(750, 60));

        bPemasok.setText("Pemasok");
        bPemasok.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bPemasokActionPerformed(evt);
            }
        });

        bHome.setText("Home");
        bHome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bHomeActionPerformed(evt);
            }
        });

        inventarisBarang.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        inventarisBarang.setText("INVENTARIS BARANG");

        bBarang.setText("Barang");
        bBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bBarangActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pNavbarLayout = new javax.swing.GroupLayout(pNavbar);
        pNavbar.setLayout(pNavbarLayout);
        pNavbarLayout.setHorizontalGroup(
            pNavbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pNavbarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(inventarisBarang)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(bBarang)
                .addGap(18, 18, 18)
                .addComponent(bPemasok)
                .addGap(18, 18, 18)
                .addComponent(bHome)
                .addGap(19, 19, 19))
        );
        pNavbarLayout.setVerticalGroup(
            pNavbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pNavbarLayout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(pNavbarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bPemasok)
                    .addComponent(bHome)
                    .addComponent(inventarisBarang)
                    .addComponent(bBarang))
                .addContainerGap())
        );

        taPemasok.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "ID Pemasok", "Nama Pemasok", "Alamat", "Kontak"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(taPemasok);

        namaPemasok.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        namaPemasok.setText("Nama Pemasok :");

        alamat.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        alamat.setText("Alamat :");

        bInsert.setText("Insert");
        bInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bInsertActionPerformed(evt);
            }
        });

        bUpdate.setText("Update");
        bUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bUpdateActionPerformed(evt);
            }
        });

        bDelete.setText("Delete");
        bDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bDeleteActionPerformed(evt);
            }
        });

        jumlah2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jumlah2.setText("Kontak :");

        bClear.setText("Clear");
        bClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pMenuEditLayout = new javax.swing.GroupLayout(pMenuEdit);
        pMenuEdit.setLayout(pMenuEditLayout);
        pMenuEditLayout.setHorizontalGroup(
            pMenuEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pNavbar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(pMenuEditLayout.createSequentialGroup()
                .addGroup(pMenuEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pMenuEditLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addGroup(pMenuEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(tKontak, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pMenuEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(namaPemasok)
                                .addComponent(tNamaPemasok)
                                .addComponent(alamat)
                                .addComponent(jumlah2)
                                .addComponent(tAlamat, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE))
                    .addGroup(pMenuEditLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(bInsert)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bUpdate)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(bClear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bDelete)
                        .addGap(24, 24, 24)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        pMenuEditLayout.setVerticalGroup(
            pMenuEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pMenuEditLayout.createSequentialGroup()
                .addComponent(pNavbar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pMenuEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pMenuEditLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(namaPemasok)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tNamaPemasok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(alamat)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tAlamat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jumlah2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tKontak, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(pMenuEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(bInsert)
                            .addComponent(bUpdate)
                            .addComponent(bDelete)
                            .addComponent(bClear))
                        .addGap(22, 22, 22))
                    .addGroup(pMenuEditLayout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 415, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(14, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pMenuEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pMenuEdit, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void loadPemasokData(){
        List<CrudPemasok> pemasokList = CrudPemasok.getAllPemasok(); // Mengambil daftar pemasok
        DefaultTableModel model = (DefaultTableModel) taPemasok.getModel(); // Mendapatkan model tabel
        model.setRowCount(0); // Menghapus semua baris di tabel
        
        // Menambahkan data pemasok ke dalam tabel
        for (CrudPemasok pemasok : pemasokList) {
            Object[] row = {
                pemasok.getIdPemasok(), // ID pemasok
                pemasok.getNama(), // Nama pemasok
                pemasok.getAlamat(), // Alamat pemasok
                pemasok.getKontak() // Kontak pemasok
            };
            model.addRow(row); // Menambahkan baris baru ke tabel
        }
    }
    
    private void bersihkan(){
        tNamaPemasok.setText(""); // Mengosongkan field Nama Pemasok
        tAlamat.setText(""); // Mengosongkan field Alamat
        tKontak.setText(""); // Mengosongkan field Kontak
        bInsert.setEnabled(true); // Mengaktifkan tombol Insert
    }
    private void bPemasokActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bPemasokActionPerformed
        // TODO add your handling code here:
        MenuPemasok pmsk = new MenuPemasok(this.userId); // Membuat instance MenuPemasok
        pmsk.setVisible(true); // Menampilkan jendela MenuPemasok
        pmsk.setLocationRelativeTo(null); // Mengatur posisi jendela di tengah
        this.dispose(); // Menutup jendela saat ini
    }//GEN-LAST:event_bPemasokActionPerformed

    private void bBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bBarangActionPerformed
        // TODO add your handling code here:
        MenuEdit edit = new MenuEdit(this.userId); // Membuat instance MenuEdit
        edit.setVisible(true); // Menampilkan jendela MenuEdit
        edit.setLocationRelativeTo(null); // Mengatur posisi jendela di tengah
        this.dispose(); // Menutup jendela saat ini
    }//GEN-LAST:event_bBarangActionPerformed

    private void bInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bInsertActionPerformed
        // TODO add your handling code herekj
        try {
            String nmPmsk = tNamaPemasok.getText();
            String almt = tAlamat.getText();
            String kontak = tKontak.getText();;
            if(!kontak.matches("\\d+")){
                JOptionPane.showMessageDialog(null, "Input Kontak Harus Angka");
                return;
            }
            
            if (nmPmsk.equals("") || almt.equals("") || kontak.equals("") ){
                JOptionPane.showMessageDialog(null, "Data tidak boleh kosong");
            } else {
                CrudPemasok insert = new CrudPemasok(nmPmsk, almt, kontak);
                insert.pemasokInsert();
                loadPemasokData();
                bersihkan();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Terdapat Kesalahan: " + e.getMessage());
        }
    }//GEN-LAST:event_bInsertActionPerformed

    private void bHomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bHomeActionPerformed
        // TODO add your handling code here:
        MenuUtama utm = new MenuUtama(this.userId);
        utm.setVisible(true);
        utm.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_bHomeActionPerformed

    private void bUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bUpdateActionPerformed
        // TODO add your handling code here:
        if(selectedPemasokId == -1){
            JOptionPane.showMessageDialog(null, "Double klik pada tabel untuk memilih pemasok yang mau diupdate");
            return;
        }
        try{
            String updateNama = tNamaPemasok.getText();
            String updateAlamat = tAlamat.getText();
            String updateKontak = tKontak.getText();
            if(!updateKontak.matches("\\d+")){
                JOptionPane.showMessageDialog(null, "Input Kontak Harus Angka");
                return;
            }
            Integer kntk = Integer.valueOf(updateKontak);
            
            if(updateNama.isEmpty()||updateAlamat.isEmpty()||updateKontak.isEmpty()){
                JOptionPane.showMessageDialog(null, "Data Tidak Boleh Kosong");
                return;
            }
            
            CrudPemasok pemasok = new CrudPemasok(updateNama, updateAlamat, updateKontak);
            pemasok.setIdPemasok(selectedPemasokId);
            pemasok.pemasokUpdate();
            
            JOptionPane.showMessageDialog(null, "Berhasil Update Data");
            loadPemasokData();
            bersihkan();
            selectedPemasokId = -1;
        } catch (Exception e){
            JOptionPane.showMessageDialog(null, "Error updating pemasok: " + e.getMessage());
        }
    }//GEN-LAST:event_bUpdateActionPerformed

    private void bClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bClearActionPerformed
        // TODO add your handling code here:
        bersihkan();
    }//GEN-LAST:event_bClearActionPerformed

    private void bDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bDeleteActionPerformed
        // TODO add your handling code here:
        if (selectedPemasokId == -1){
            JOptionPane.showMessageDialog(null, "Double klik pada tabel untuk memilih pemasok yang mau dihapus");
            return;
        }
        
        int verifikasi = JOptionPane.showConfirmDialog(null, "Apakah anda yakin mau menghapus Pemasok ini?", "Verifikasi", JOptionPane.YES_NO_OPTION);
        if(verifikasi == JOptionPane.YES_OPTION){
            try{
                CrudPemasok pemasok = new CrudPemasok("","","");
                pemasok.setIdPemasok(selectedPemasokId);
                pemasok.pemasokDelete();
                
                JOptionPane.showMessageDialog(null, "Delete Berhasil!");
                loadPemasokData();
                bersihkan();
                selectedPemasokId = -1;
            }catch(Exception e){
                JOptionPane.showMessageDialog(null, "Error Delete Pemasok: " + e.getMessage());
            }
        }
    }//GEN-LAST:event_bDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CrudPemasok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CrudPemasok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CrudPemasok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CrudPemasok.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuPemasok().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel alamat;
    private javax.swing.JButton bBarang;
    private javax.swing.JButton bClear;
    private javax.swing.JButton bDelete;
    private javax.swing.JButton bHome;
    private javax.swing.JButton bInsert;
    private javax.swing.JButton bPemasok;
    private javax.swing.JButton bUpdate;
    private javax.swing.JLabel inventarisBarang;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel jumlah2;
    private javax.swing.JLabel namaPemasok;
    private javax.swing.JPanel pMenuEdit;
    private javax.swing.JPanel pNavbar;
    private javax.swing.JTextField tAlamat;
    private javax.swing.JTextField tKontak;
    private javax.swing.JTextField tNamaPemasok;
    private javax.swing.JTable taPemasok;
    // End of variables declaration//GEN-END:variables
}
